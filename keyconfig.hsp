
    #include "cfg.as"
    #packopt name "KeyConfig"

    #module

        #defcfunc convertKeyCode int code, array codeList

            string = ""

            if ( code >= 48 ) and ( code <= 57 ) {

                poke string, 0, code
                poke string, 1, 0
                return string

            }

            if ( code >= 65 ) and ( code <= 90 ) {

                poke string, 0, code
                poke string, 1, 0
                return string

            }

            string ="<Undefined>"

            foreach codeList

                if ( cnt == code ) {

                    string = codeList.cnt
                    break

                }

            loop

        return string

    #global

    pname = ""
    port = 0

    dim buttons, 14

    #enum masconB = 0
    #enum masconP
    #enum btnAkey
    #enum btnBkey
    #enum btnXkey
    #enum btnYkey
    #enum btnZLkey
    #enum btnLLkey
    #enum btnZRkey
    #enum btnRRkey
    #enum btnPLkey
    #enum btnMNkey
    #enum btnSHkey
    #enum btnHMkey
    
    keyName.0 = "MasconB"
    keyName.1 = "MasconP"
    keyName.2 = "ButtonA"
    keyName.3 = "ButtonB"
    keyName.4 = "ButtonX"
    keyName.5 = "ButtonY"
    keyName.6 = "ButtonZL"
    keyName.7 = "ButtonLL"
    keyName.8 = "ButtonZR"
    keyName.9 = "ButtonRR"
    keyName.10 = "ButtonPL"
    keyName.11 = "ButtonMN"
    keyName.12 = "ButtonSH"
    keyName.13 = "ButtonHM"

    keyStat = 0

    screen 1, 320, 240

    title ""

    mes "割り当てるキーを押してください。\n（同時押し不可）"
    button gosub "キャンセル", *l_cancel

    gsel 1, -1
    gsel 0


*start
    cls 0

    title "Zuiki RTM MasConverter - Key Config"

    cfgAS_init "config.ascfg"
    cfgAS_read "ProgramName", pname
    cfgAS_read "PortNum", port

    foreach keyName

        cfgAS_read keyName.cnt, buttons.cnt

    loop

    cfgAS_init "keycodelist.ini"

    keyCodeMaxIndex = 0
    cfgAS_read "maxIndex", keyCodeMaxIndex

    sdim keyCode, 64, keyCodeMaxIndex +1

    repeat keyCodeMaxIndex +1

        cfgAS_read str(cnt), keyCode.cnt

    loop

    sdim keyStr

    pos 0, ginfo_cy
    mes "ワンハンドルマスコン　制動方向: "+ convertKeyCode( buttons.masconB, keyCode ) +"　", 1
    button "設定", *l_setkey

    pos 0, ginfo_cy
    mes "ワンハンドルマスコン　力行方向: "+ convertKeyCode( buttons.masconP, keyCode ) +"　", 1
    button "設定", *l_setkey

    pos 0, ginfo_cy
    mes "ボタン　A : "+ convertKeyCode( buttons.btnAkey, keyCode ) +"　", 1
    button "設定", *l_setkey

    pos 0, ginfo_cy
    mes "ボタン　B : "+ convertKeyCode( buttons.btnBkey, keyCode ) +"　", 1
    button "設定", *l_setkey

    pos 0, ginfo_cy
    mes "ボタン　X : "+ convertKeyCode( buttons.btnXkey, keyCode ) +"　", 1
    button "設定", *l_setkey

    pos 0, ginfo_cy
    mes "ボタン　Y : "+ convertKeyCode( buttons.btnYkey, keyCode ) +"　", 1
    button "設定", *l_setkey

    pos 0, ginfo_cy
    mes "ボタン　ZL: "+ convertKeyCode( buttons.btnZLkey, keyCode ) +"　", 1
    button "設定", *l_setkey

    pos 0, ginfo_cy
    mes "ボタン　L : "+ convertKeyCode( buttons.btnLLkey, keyCode ) +"　", 1
    button "設定", *l_setkey

    pos 0, ginfo_cy
    mes "ボタン　ZR: "+ convertKeyCode( buttons.btnZRkey, keyCode ) +"　", 1
    button "設定", *l_setkey

    pos 0, ginfo_cy
    mes "ボタン　R : "+ convertKeyCode( buttons.btnRRkey, keyCode ) +"　", 1
    button "設定", *l_setkey

    pos 0, ginfo_cy
    mes "ボタン　+ : "+ convertKeyCode( buttons.btnPLkey, keyCode ) +"　", 1
    button "設定", *l_setkey

    pos 0, ginfo_cy
    mes "ボタン　- : "+ convertKeyCode( buttons.btnMNkey, keyCode ) +"　", 1
    button "設定", *l_setkey

    pos 0, ginfo_cy
    mes "ボタン　共有　: "+ convertKeyCode( buttons.btnSHkey, keyCode ) +"　", 1
    button "設定", *l_setkey

    pos 0, ginfo_cy
    mes "ボタン　ホーム: "+ convertKeyCode( buttons.btnHMkey, keyCode ) +"　", 1
    button "設定", *l_setkey

    stop

*l_setkey

    pushedButtonObj = stat

    gsel 1, 1

    onkey gosub *l_pushedKey
    keyStat = 0

    repeat

        if ( keyStat ) : break

        wait 1

    loop

    cfgAS_init "config.ascfg"

    if ( keyStat == 1 ) {

        buttons.pushedButtonObj = wparam
        cfgAS_write keyName.pushedButtonObj, buttons.pushedButtonObj, 1
        cfgAS_save "config.ascfg"

    }

    onkey 0
    gsel 1, -1
    gsel 0

    goto *start

*l_pushedKey

    keyStat = 1

    return

*l_cancel

    keyStat = 2

    return